(()=>{var __webpack_modules__={433:()=>{eval("class AddRecipesController {\n  constructor() {\n    this.recipeForm = $('#recipeForm');\n    this.ingredientRowClone = $('#ingredientInputRow').clone();\n    this.successAlert = $(`\n      <div class=\"alert alert-success alert-dismissible fade show\" role=\"alert\"\n           id=\"successAlert\">\n        <strong>Success!</strong> A new recipe has been added.\n        <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>`);\n    this.bindFormControls();\n  }\n\n  bindFormControls() {\n    this.recipeForm.on('click', '#submit',\n        this.handleSubmit.bind(this));\n\n    this.recipeForm.on('click', '#addIngredient',\n        this.handleAddIngredient.bind(this));\n\n    this.recipeForm.on('blur', '#inputQuantity',\n        this.scrapeAndValidateForm.bind(this));\n\n    this.createAutocomplete(this.recipeForm.find('#inputIngredient'));\n  }\n\n  createAutocomplete(element) {\n    element.autoComplete({\n      resolverSettings: {\n        url: '/ingredients'\n      }\n    });\n  }\n\n  handleAddIngredient() {\n    const newInput = this.ingredientRowClone.clone();\n    newInput.insertBefore('#addNewIngredientRow');\n    this.createAutocomplete(newInput.find('#inputIngredient'));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n\n    const formData = this.scrapeAndValidateForm();\n\n    if (this.recipeForm.get(0).checkValidity()) {\n      this.sendRecipeToServer(formData);\n    }\n\n    this.recipeForm.removeClass('needs-validation').addClass('was-validated');\n  }\n\n  scrapeAndValidateForm() {\n    const formData = {};\n    const name = this.recipeForm.find('#inputRecipeName').val();\n    const description = this.recipeForm.find('#inputDescription').val();\n    const instructions = this.recipeForm.find('#inputInstructions').val();\n\n    formData.name = name;\n    formData.description = description;\n    formData.instructions = instructions;\n\n    formData.ingredients = [];\n\n    this.recipeForm.find('.ingredientInputRow').each(function () {\n      const row = $(this);\n      const quantityInput = row.find('#inputQuantity');\n      const quantity = quantityInput.val();\n      const unit = row.find('#inputUnit').val();\n      const ingredient = row.find('input[name=\"inputIngredient\"]').val();\n\n      if (quantity <= 0) {\n        quantityInput.get(0).setCustomValidity('Quantity must be > 0');\n      } else {\n        quantityInput.get(0).setCustomValidity('');\n      }\n\n      formData.ingredients.push({\n        quantity: quantity,\n        unit: unit,\n        ingredient: ingredient\n      })\n    });\n\n    return formData;\n  }\n\n  sendRecipeToServer(data) {\n    const headers = {};\n    headers[CSRF_HEADER_NAME] = CSRF_TOKEN;\n\n    const inputs = this.recipeForm.find(':input');\n    inputs.prop('disabled', true);\n\n    $.ajax(\"/addrecipes\", {\n      data: JSON.stringify(data),\n      contentType: 'application/json',\n      method: 'PUT',\n      headers: headers,\n      processData: false\n    })\n        .done((data, textStatus) => {\n          console.log(\"success\", data, textStatus);\n        })\n        .fail((jqXHR, textStatus, errorThrown) => {\n          console.log(\"error\", textStatus, errorThrown);\n        })\n        .always(() => {\n          inputs.prop('disabled', false);\n          this.resetForm();\n          this.showSuccessAlert();\n        });\n  }\n\n  resetForm() {\n    this.recipeForm.removeClass('was-validated').addClass(\n        'needs-validation');\n    this.recipeForm.find(':input')\n        .not(':button, :submit')\n        .val('');\n    this.recipeForm.find('.ingredientInputRow').remove();\n    const newRow = this.ingredientRowClone.clone();\n    newRow.insertBefore('#addNewIngredientRow');\n    this.createAutocomplete(newRow.find('#inputIngredient'));\n  }\n\n  showSuccessAlert() {\n    const newAlert = this.successAlert.clone();\n    newAlert.appendTo(this.recipeForm);\n    setTimeout(() => {\n      newAlert.alert('close');\n    }, 4000)\n  }\n}\n\nnew AddRecipesController();//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDMzLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBDQUEwQztBQUMxQztBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLOztBQUVMO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL21lYWwtcGxhbm5lci8uL3NyYy9tYWluL3Jlc291cmNlcy9zdGF0aWMvanMvYWRkcmVjaXBlcy9hZGRyZWNpcGVzLmpzP2NlOGEiXSwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgQWRkUmVjaXBlc0NvbnRyb2xsZXIge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICB0aGlzLnJlY2lwZUZvcm0gPSAkKCcjcmVjaXBlRm9ybScpO1xuICAgIHRoaXMuaW5ncmVkaWVudFJvd0Nsb25lID0gJCgnI2luZ3JlZGllbnRJbnB1dFJvdycpLmNsb25lKCk7XG4gICAgdGhpcy5zdWNjZXNzQWxlcnQgPSAkKGBcbiAgICAgIDxkaXYgY2xhc3M9XCJhbGVydCBhbGVydC1zdWNjZXNzIGFsZXJ0LWRpc21pc3NpYmxlIGZhZGUgc2hvd1wiIHJvbGU9XCJhbGVydFwiXG4gICAgICAgICAgIGlkPVwic3VjY2Vzc0FsZXJ0XCI+XG4gICAgICAgIDxzdHJvbmc+U3VjY2VzcyE8L3N0cm9uZz4gQSBuZXcgcmVjaXBlIGhhcyBiZWVuIGFkZGVkLlxuICAgICAgICA8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImNsb3NlXCIgZGF0YS1kaXNtaXNzPVwiYWxlcnRcIiBhcmlhLWxhYmVsPVwiQ2xvc2VcIj5cbiAgICAgICAgICA8c3BhbiBhcmlhLWhpZGRlbj1cInRydWVcIj4mdGltZXM7PC9zcGFuPlxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvZGl2PmApO1xuICAgIHRoaXMuYmluZEZvcm1Db250cm9scygpO1xuICB9XG5cbiAgYmluZEZvcm1Db250cm9scygpIHtcbiAgICB0aGlzLnJlY2lwZUZvcm0ub24oJ2NsaWNrJywgJyNzdWJtaXQnLFxuICAgICAgICB0aGlzLmhhbmRsZVN1Ym1pdC5iaW5kKHRoaXMpKTtcblxuICAgIHRoaXMucmVjaXBlRm9ybS5vbignY2xpY2snLCAnI2FkZEluZ3JlZGllbnQnLFxuICAgICAgICB0aGlzLmhhbmRsZUFkZEluZ3JlZGllbnQuYmluZCh0aGlzKSk7XG5cbiAgICB0aGlzLnJlY2lwZUZvcm0ub24oJ2JsdXInLCAnI2lucHV0UXVhbnRpdHknLFxuICAgICAgICB0aGlzLnNjcmFwZUFuZFZhbGlkYXRlRm9ybS5iaW5kKHRoaXMpKTtcblxuICAgIHRoaXMuY3JlYXRlQXV0b2NvbXBsZXRlKHRoaXMucmVjaXBlRm9ybS5maW5kKCcjaW5wdXRJbmdyZWRpZW50JykpO1xuICB9XG5cbiAgY3JlYXRlQXV0b2NvbXBsZXRlKGVsZW1lbnQpIHtcbiAgICBlbGVtZW50LmF1dG9Db21wbGV0ZSh7XG4gICAgICByZXNvbHZlclNldHRpbmdzOiB7XG4gICAgICAgIHVybDogJy9pbmdyZWRpZW50cydcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGhhbmRsZUFkZEluZ3JlZGllbnQoKSB7XG4gICAgY29uc3QgbmV3SW5wdXQgPSB0aGlzLmluZ3JlZGllbnRSb3dDbG9uZS5jbG9uZSgpO1xuICAgIG5ld0lucHV0Lmluc2VydEJlZm9yZSgnI2FkZE5ld0luZ3JlZGllbnRSb3cnKTtcbiAgICB0aGlzLmNyZWF0ZUF1dG9jb21wbGV0ZShuZXdJbnB1dC5maW5kKCcjaW5wdXRJbmdyZWRpZW50JykpO1xuICB9XG5cbiAgaGFuZGxlU3VibWl0KGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgIGNvbnN0IGZvcm1EYXRhID0gdGhpcy5zY3JhcGVBbmRWYWxpZGF0ZUZvcm0oKTtcblxuICAgIGlmICh0aGlzLnJlY2lwZUZvcm0uZ2V0KDApLmNoZWNrVmFsaWRpdHkoKSkge1xuICAgICAgdGhpcy5zZW5kUmVjaXBlVG9TZXJ2ZXIoZm9ybURhdGEpO1xuICAgIH1cblxuICAgIHRoaXMucmVjaXBlRm9ybS5yZW1vdmVDbGFzcygnbmVlZHMtdmFsaWRhdGlvbicpLmFkZENsYXNzKCd3YXMtdmFsaWRhdGVkJyk7XG4gIH1cblxuICBzY3JhcGVBbmRWYWxpZGF0ZUZvcm0oKSB7XG4gICAgY29uc3QgZm9ybURhdGEgPSB7fTtcbiAgICBjb25zdCBuYW1lID0gdGhpcy5yZWNpcGVGb3JtLmZpbmQoJyNpbnB1dFJlY2lwZU5hbWUnKS52YWwoKTtcbiAgICBjb25zdCBkZXNjcmlwdGlvbiA9IHRoaXMucmVjaXBlRm9ybS5maW5kKCcjaW5wdXREZXNjcmlwdGlvbicpLnZhbCgpO1xuICAgIGNvbnN0IGluc3RydWN0aW9ucyA9IHRoaXMucmVjaXBlRm9ybS5maW5kKCcjaW5wdXRJbnN0cnVjdGlvbnMnKS52YWwoKTtcblxuICAgIGZvcm1EYXRhLm5hbWUgPSBuYW1lO1xuICAgIGZvcm1EYXRhLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XG4gICAgZm9ybURhdGEuaW5zdHJ1Y3Rpb25zID0gaW5zdHJ1Y3Rpb25zO1xuXG4gICAgZm9ybURhdGEuaW5ncmVkaWVudHMgPSBbXTtcblxuICAgIHRoaXMucmVjaXBlRm9ybS5maW5kKCcuaW5ncmVkaWVudElucHV0Um93JykuZWFjaChmdW5jdGlvbiAoKSB7XG4gICAgICBjb25zdCByb3cgPSAkKHRoaXMpO1xuICAgICAgY29uc3QgcXVhbnRpdHlJbnB1dCA9IHJvdy5maW5kKCcjaW5wdXRRdWFudGl0eScpO1xuICAgICAgY29uc3QgcXVhbnRpdHkgPSBxdWFudGl0eUlucHV0LnZhbCgpO1xuICAgICAgY29uc3QgdW5pdCA9IHJvdy5maW5kKCcjaW5wdXRVbml0JykudmFsKCk7XG4gICAgICBjb25zdCBpbmdyZWRpZW50ID0gcm93LmZpbmQoJ2lucHV0W25hbWU9XCJpbnB1dEluZ3JlZGllbnRcIl0nKS52YWwoKTtcblxuICAgICAgaWYgKHF1YW50aXR5IDw9IDApIHtcbiAgICAgICAgcXVhbnRpdHlJbnB1dC5nZXQoMCkuc2V0Q3VzdG9tVmFsaWRpdHkoJ1F1YW50aXR5IG11c3QgYmUgPiAwJyk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBxdWFudGl0eUlucHV0LmdldCgwKS5zZXRDdXN0b21WYWxpZGl0eSgnJyk7XG4gICAgICB9XG5cbiAgICAgIGZvcm1EYXRhLmluZ3JlZGllbnRzLnB1c2goe1xuICAgICAgICBxdWFudGl0eTogcXVhbnRpdHksXG4gICAgICAgIHVuaXQ6IHVuaXQsXG4gICAgICAgIGluZ3JlZGllbnQ6IGluZ3JlZGllbnRcbiAgICAgIH0pXG4gICAgfSk7XG5cbiAgICByZXR1cm4gZm9ybURhdGE7XG4gIH1cblxuICBzZW5kUmVjaXBlVG9TZXJ2ZXIoZGF0YSkge1xuICAgIGNvbnN0IGhlYWRlcnMgPSB7fTtcbiAgICBoZWFkZXJzW0NTUkZfSEVBREVSX05BTUVdID0gQ1NSRl9UT0tFTjtcblxuICAgIGNvbnN0IGlucHV0cyA9IHRoaXMucmVjaXBlRm9ybS5maW5kKCc6aW5wdXQnKTtcbiAgICBpbnB1dHMucHJvcCgnZGlzYWJsZWQnLCB0cnVlKTtcblxuICAgICQuYWpheChcIi9hZGRyZWNpcGVzXCIsIHtcbiAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KGRhdGEpLFxuICAgICAgY29udGVudFR5cGU6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIG1ldGhvZDogJ1BVVCcsXG4gICAgICBoZWFkZXJzOiBoZWFkZXJzLFxuICAgICAgcHJvY2Vzc0RhdGE6IGZhbHNlXG4gICAgfSlcbiAgICAgICAgLmRvbmUoKGRhdGEsIHRleHRTdGF0dXMpID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcInN1Y2Nlc3NcIiwgZGF0YSwgdGV4dFN0YXR1cyk7XG4gICAgICAgIH0pXG4gICAgICAgIC5mYWlsKChqcVhIUiwgdGV4dFN0YXR1cywgZXJyb3JUaHJvd24pID0+IHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhcImVycm9yXCIsIHRleHRTdGF0dXMsIGVycm9yVGhyb3duKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmFsd2F5cygoKSA9PiB7XG4gICAgICAgICAgaW5wdXRzLnByb3AoJ2Rpc2FibGVkJywgZmFsc2UpO1xuICAgICAgICAgIHRoaXMucmVzZXRGb3JtKCk7XG4gICAgICAgICAgdGhpcy5zaG93U3VjY2Vzc0FsZXJ0KCk7XG4gICAgICAgIH0pO1xuICB9XG5cbiAgcmVzZXRGb3JtKCkge1xuICAgIHRoaXMucmVjaXBlRm9ybS5yZW1vdmVDbGFzcygnd2FzLXZhbGlkYXRlZCcpLmFkZENsYXNzKFxuICAgICAgICAnbmVlZHMtdmFsaWRhdGlvbicpO1xuICAgIHRoaXMucmVjaXBlRm9ybS5maW5kKCc6aW5wdXQnKVxuICAgICAgICAubm90KCc6YnV0dG9uLCA6c3VibWl0JylcbiAgICAgICAgLnZhbCgnJyk7XG4gICAgdGhpcy5yZWNpcGVGb3JtLmZpbmQoJy5pbmdyZWRpZW50SW5wdXRSb3cnKS5yZW1vdmUoKTtcbiAgICBjb25zdCBuZXdSb3cgPSB0aGlzLmluZ3JlZGllbnRSb3dDbG9uZS5jbG9uZSgpO1xuICAgIG5ld1Jvdy5pbnNlcnRCZWZvcmUoJyNhZGROZXdJbmdyZWRpZW50Um93Jyk7XG4gICAgdGhpcy5jcmVhdGVBdXRvY29tcGxldGUobmV3Um93LmZpbmQoJyNpbnB1dEluZ3JlZGllbnQnKSk7XG4gIH1cblxuICBzaG93U3VjY2Vzc0FsZXJ0KCkge1xuICAgIGNvbnN0IG5ld0FsZXJ0ID0gdGhpcy5zdWNjZXNzQWxlcnQuY2xvbmUoKTtcbiAgICBuZXdBbGVydC5hcHBlbmRUbyh0aGlzLnJlY2lwZUZvcm0pO1xuICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgbmV3QWxlcnQuYWxlcnQoJ2Nsb3NlJyk7XG4gICAgfSwgNDAwMClcbiAgfVxufVxuXG5uZXcgQWRkUmVjaXBlc0NvbnRyb2xsZXIoKTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///433\n")}},__webpack_exports__={};__webpack_modules__[433]()})();